#!/usr/bin/ruby

require 'yaml'
require 'erb'
require 'etcd'

class EtcdTmpl

  def initialize
    # check if we know ETCD_URL otherwise use a sane default
    ENV['ETCD_URL'] ||= "etcd://127.0.0.1:4001/"

    # initialize ETCD client
    (etcd_host, etcd_port) = ENV['ETCD_URL'].sub(/^etcd:\/\//, '').sub(/\/$/, '').split(':')
    @etcd = Etcd.client(host: etcd_host, port: etcd_port)
    
    # connection check
    begin
      @etcd.leader
    rescue
      $stderr.puts "Couldn't connect to etcd at #{ENV['ETCD_URL']}"
      exit 1
    end

    # define methods for namespaces
    @etcd.get.each do |ns|
      ns.gsub!(/\//, '')
      path.sub!(/^\//, '')
      define_method(ns) do |path|
        @etcd.get("/" + ns + '/' + path).value
      end
    end
  end

  # method for global namespace
  def global path
    path.sub!(/^\//, '')
    @etcd.get('/' + path).value
  end

  alias_method :g, :global

  # templater :)  
  def apply template
    puts ERB.new(template).result
  end  
    
end

EtcdTmpl.new.apply